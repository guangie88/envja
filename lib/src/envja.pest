// Basis for ident
alpha = _{ ASCII_ALPHA }
digit = _{ ASCII_DIGIT }
underscore = _{ "_" }
ws = _{ " " | "\t" | "\n" }

// Basis for finding stmt and expr
stmt_open = _{ "{%" }
stmt_close = _{ "%}" }
expr_open = _{ "{{" }
expr_close = _{ "}}" }
comm_open = _{ "{#" }
comm_close = _{ "#}" }

// For matching verbatim text
text_char = ${
    !(stmt_open | stmt_close | expr_open | expr_close | comm_open | comm_close) ~ ANY
}

// Main body
ident = { (alpha | underscore) ~ (alpha | digit | underscore)* }

if_stmt_start = { stmt_open ~ ws* ~ "if" ~ ws* ~ ident ~ ws* ~ stmt_close }
if_stmt_end = { stmt_open ~ ws* ~ "endif" ~ ws* ~ stmt_close }
if_stmt = { if_stmt_start ~ compound ~ if_stmt_end }

text = { text_char+ }
stmt = { if_stmt }
expr = { expr_open ~ ws* ~ ident ~ ws* ~ expr_close }
comm = { comm_open ~ text_char* ~ comm_close }
compound = { (text | stmt | expr | comm) ~ compound | "" }

// To create starting point, note that EOI will be matched
doc = _{ SOI ~ compound ~ EOI }
